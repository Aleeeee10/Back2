const mongoose = require('mongoose');
const { MONGO_URI } = require('../keys');

// 1. Configuraci√≥n de eventos de conexi√≥n
mongoose.connection.on('connected', () => {
  console.log('‚úÖ Mongoose conectado a MongoDB en:', mongoose.connection.host);
});

mongoose.connection.on('error', (err) => {
  console.error('‚ùå Error de conexi√≥n en Mongoose:', err);
});

mongoose.connection.on('disconnected', () => {
  console.log('‚ö†Ô∏è  Mongoose desconectado de MongoDB');
});

// 2. Funci√≥n de conexi√≥n mejorada
const connectDB = async () => {
  try {
    await mongoose.connect(MONGO_URI, {
      serverSelectionTimeoutMS: 5000, // 5 segundos para selecci√≥n de servidor
      socketTimeoutMS: 45000,         // 45 segundos para timeout de operaciones
      family: 4,                      // Usar IPv4
      maxPoolSize: 10,               // M√°ximo de conexiones en el pool
      retryWrites: true,
      w: 'majority'
    });
    
    console.log('üöÄ MongoDB conectado correctamente');
  } catch (err) {
    console.error('üí• FALLA CR√çTICA en conexi√≥n MongoDB:', err.message);
    process.exit(1); // Termina la aplicaci√≥n con error
  }
};

// 3. Manejo de cierre de aplicaci√≥n
process.on('SIGINT', async () => {
  try {
    await mongoose.connection.close();
    console.log('ÔøΩ Conexi√≥n a MongoDB cerrada por terminaci√≥n de la app');
    process.exit(0);
  } catch (err) {
    console.error('Error al cerrar conexi√≥n MongoDB:', err);
    process.exit(1);
  }
});

// 4. Exportar modelos (ajusta las rutas seg√∫n tu estructura)
const ActivityLogsModel = require('../model/nonRelational/ActivityLogs');
const FavoritosModel = require('../model/nonRelational/favoritos');
const MensajesModel = require('../model/nonRelational/mensajes');
const NotificationsLogModel = require('../model/nonRelational/NotificationsLog');
const UserPreferencesModel = require('../model/nonRelational/UserPreferences');

module.exports = {
  connectDB,
  ActivityLogsModel,
  FavoritosModel,
  MensajesModel,
  NotificationsLogModel,
  UserPreferencesModel,
};
